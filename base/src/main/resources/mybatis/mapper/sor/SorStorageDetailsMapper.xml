<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sor.mapper.SorStorageDetailsMapper">
  <resultMap id="BaseResultMap" type="com.sor.entity.SorStorageDetails">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="PackageID" jdbcType="VARCHAR" property="packageid" />
    <result column="Weight" jdbcType="DECIMAL" property="weight" />
    <result column="OutBoundID" jdbcType="VARCHAR" property="outboundid" />
    <result column="State" jdbcType="BIT" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, PackageID, Weight, OutBoundID, State
  </sql>
  <select id="selectByExample" parameterType="com.sor.entity.SorStorageDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sor_storagedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.sor.entity.SorStorageDetailsExample">
    delete from sor_storagedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sor.entity.SorStorageDetails">
    insert into sor_storagedetails (id, PackageID, Weight, 
      OutBoundID, State,storageid)
    values (#{id,jdbcType=VARCHAR}, #{packageid,jdbcType=VARCHAR}, #{weight,jdbcType=DECIMAL}, 
      #{outboundid,jdbcType=VARCHAR}, #{state,jdbcType=BIT}, #{storageid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sor.entity.SorStorageDetails">
    insert into sor_storagedetails
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="packageid != null">
        PackageID,
      </if>
      <if test="weight != null">
        Weight,
      </if>
      <if test="outboundid != null">
        OutBoundID,
      </if>
      <if test="state != null">
        State,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="packageid != null">
        #{packageid,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DECIMAL},
      </if>
      <if test="outboundid != null">
        #{outboundid,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sor.entity.SorStorageDetailsExample" resultType="java.lang.Long">
    select count(*) from sor_storagedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sor_storagedetails
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.packageid != null">
        PackageID = #{record.packageid,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null">
        Weight = #{record.weight,jdbcType=DECIMAL},
      </if>
      <if test="record.outboundid != null">
        OutBoundID = #{record.outboundid,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        State = #{record.state,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sor_storagedetails
    set id = #{record.id,jdbcType=VARCHAR},
      PackageID = #{record.packageid,jdbcType=VARCHAR},
      Weight = #{record.weight,jdbcType=DECIMAL},
      OutBoundID = #{record.outboundid,jdbcType=VARCHAR},
      State = #{record.state,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>