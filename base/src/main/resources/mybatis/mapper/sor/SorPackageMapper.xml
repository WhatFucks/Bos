<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sor.mapper.SorPackageMapper">
  <resultMap id="BaseResultMap" type="com.sor.entity.SorPackage">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="PackagePerson" jdbcType="INTEGER" property="packageperson" />
    <result column="SealInt" jdbcType="VARCHAR" property="sealint" />
    <result column="Destination" jdbcType="VARCHAR" property="destination" />
    <result column="ReckonDes" jdbcType="VARCHAR" property="reckondes" />
    <result column="TimeLimit" jdbcType="TIMESTAMP" property="timelimit" />
    <result column="TicketSum" jdbcType="INTEGER" property="ticketsum" />
    <result column="CargoSum" jdbcType="INTEGER" property="cargosum" />
    <result column="WeightSum" jdbcType="DECIMAL" property="weightsum" />
    <result column="VolumeSum" jdbcType="DECIMAL" property="volumesum" />
    <result column="State" jdbcType="BIT" property="state" />
    <result column="Ask" jdbcType="INTEGER" property="ask" />
  </resultMap>

  <!--配置一对多的关系-->
  <resultMap id="checkAndDetail" type="com.sor.entity.SorPackage">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="PackagePerson" jdbcType="INTEGER" property="packageperson" />
    <result column="SealInt" jdbcType="VARCHAR" property="sealint" />
    <result column="Destination" jdbcType="VARCHAR" property="destination" />
    <result column="ReckonDes" jdbcType="VARCHAR" property="reckondes" />
    <result column="TimeLimit" jdbcType="TIMESTAMP" property="timelimit" />
    <result column="TicketSum" jdbcType="INTEGER" property="ticketsum" />
    <result column="CargoSum" jdbcType="INTEGER" property="cargosum" />
    <result column="WeightSum" jdbcType="DECIMAL" property="weightsum" />
    <result column="VolumeSum" jdbcType="DECIMAL" property="volumesum" />
    <result column="State" jdbcType="BIT" property="state" />
    <collection property="domains" ofType="com.sor.entity.SorPackageDetails">
      <result column="id" jdbcType="VARCHAR" property="id" />
      <result column="WareName" jdbcType="VARCHAR" property="warename" />
      <result column="Destination" jdbcType="VARCHAR" property="destination" />
      <result column="Ticket" jdbcType="INTEGER" property="ticket" />
      <result column="ActualCargoInt" jdbcType="INTEGER" property="actualcargoint" />
      <result column="CargoInt" jdbcType="INTEGER" property="cargoint" />
      <result column="Weight" jdbcType="DECIMAL" property="weight" />
      <result column="Volume" jdbcType="DECIMAL" property="volume" />
      <result column="Service" jdbcType="TIMESTAMP" property="service" />
      <result column="ImportantHints" jdbcType="VARCHAR" property="importanthints" />
      <result column="InputType" jdbcType="VARCHAR" property="inputtype" />
    </collection>
  </resultMap>

  <select id="queryAllById" parameterType="java.lang.String" resultMap="checkAndDetail">
    select p.id,p.packageperson,p.sealint,p.destination,p.reckondes,p.timelimit,p.ticketsum,
    p.cargosum,p.weightsum,p.volumesum,d.id,d.warename,d.destination,d.ticket,d.actualcargoint,d.cargoint,
    d.weight,d.volume,d.service,d.importanthints,d.ask,d.inputtype
     from sor_package p,sor_packagedetails d where p.id=d.packageId and p.id=#{id} and p.state=0
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, PackagePerson, SealInt, Destination, ReckonDes, TimeLimit, TicketSum, CargoSum, 
    WeightSum, VolumeSum, State, Ask
  </sql>
  <select id="selectByExample" parameterType="com.sor.entity.SorPackageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sor_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sor_package
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sor_package
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sor.entity.SorPackageExample">
    delete from sor_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sor.entity.SorPackage">
    insert into sor_package (id, PackagePerson, SealInt, 
      Destination, ReckonDes, TimeLimit, 
      TicketSum, CargoSum, WeightSum, 
      VolumeSum, State, Ask)
    values (#{id,jdbcType=VARCHAR}, #{packageperson,jdbcType=INTEGER}, #{sealint,jdbcType=VARCHAR}, 
      #{destination,jdbcType=VARCHAR}, #{reckondes,jdbcType=VARCHAR}, #{timelimit,jdbcType=TIMESTAMP}, 
      #{ticketsum,jdbcType=INTEGER}, #{cargosum,jdbcType=INTEGER}, #{weightsum,jdbcType=DECIMAL}, 
      #{volumesum,jdbcType=DECIMAL}, #{state,jdbcType=BIT}, #{ask,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sor.entity.SorPackage">
    insert into sor_package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="packageperson != null">
        PackagePerson,
      </if>
      <if test="sealint != null">
        SealInt,
      </if>
      <if test="destination != null">
        Destination,
      </if>
      <if test="reckondes != null">
        ReckonDes,
      </if>
      <if test="timelimit != null">
        TimeLimit,
      </if>
      <if test="ticketsum != null">
        TicketSum,
      </if>
      <if test="cargosum != null">
        CargoSum,
      </if>
      <if test="weightsum != null">
        WeightSum,
      </if>
      <if test="volumesum != null">
        VolumeSum,
      </if>
      <if test="state != null">
        State,
      </if>
      <if test="ask != null">
        Ask,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="packageperson != null">
        #{packageperson,jdbcType=INTEGER},
      </if>
      <if test="sealint != null">
        #{sealint,jdbcType=VARCHAR},
      </if>
      <if test="destination != null">
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="reckondes != null">
        #{reckondes,jdbcType=VARCHAR},
      </if>
      <if test="timelimit != null">
        #{timelimit,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketsum != null">
        #{ticketsum,jdbcType=INTEGER},
      </if>
      <if test="cargosum != null">
        #{cargosum,jdbcType=INTEGER},
      </if>
      <if test="weightsum != null">
        #{weightsum,jdbcType=DECIMAL},
      </if>
      <if test="volumesum != null">
        #{volumesum,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
      <if test="ask != null">
        #{ask,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sor.entity.SorPackageExample" resultType="java.lang.Long">
    select count(*) from sor_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update sor_package
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.packageperson != null">
        PackagePerson = #{record.packageperson,jdbcType=INTEGER},
      </if>
      <if test="record.sealint != null">
        SealInt = #{record.sealint,jdbcType=VARCHAR},
      </if>
      <if test="record.destination != null">
        Destination = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.reckondes != null">
        ReckonDes = #{record.reckondes,jdbcType=VARCHAR},
      </if>
      <if test="record.timelimit != null">
        TimeLimit = #{record.timelimit,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ticketsum != null">
        TicketSum = #{record.ticketsum,jdbcType=INTEGER},
      </if>
      <if test="record.cargosum != null">
        CargoSum = #{record.cargosum,jdbcType=INTEGER},
      </if>
      <if test="record.weightsum != null">
        WeightSum = #{record.weightsum,jdbcType=DECIMAL},
      </if>
      <if test="record.volumesum != null">
        VolumeSum = #{record.volumesum,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        State = #{record.state,jdbcType=BIT},
      </if>
      <if test="record.ask != null">
        Ask = #{record.ask,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sor_package
    set id = #{record.id,jdbcType=VARCHAR},
      PackagePerson = #{record.packageperson,jdbcType=INTEGER},
      SealInt = #{record.sealint,jdbcType=VARCHAR},
      Destination = #{record.destination,jdbcType=VARCHAR},
      ReckonDes = #{record.reckondes,jdbcType=VARCHAR},
      TimeLimit = #{record.timelimit,jdbcType=TIMESTAMP},
      TicketSum = #{record.ticketsum,jdbcType=INTEGER},
      CargoSum = #{record.cargosum,jdbcType=INTEGER},
      WeightSum = #{record.weightsum,jdbcType=DECIMAL},
      VolumeSum = #{record.volumesum,jdbcType=DECIMAL},
      State = #{record.state,jdbcType=BIT},
      Ask = #{record.ask,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sor.entity.SorPackage">
    update sor_package
    <set>
      <if test="packageperson != null">
        PackagePerson = #{packageperson,jdbcType=INTEGER},
      </if>
      <if test="sealint != null">
        SealInt = #{sealint,jdbcType=VARCHAR},
      </if>
      <if test="destination != null">
        Destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="reckondes != null">
        ReckonDes = #{reckondes,jdbcType=VARCHAR},
      </if>
      <if test="timelimit != null">
        TimeLimit = #{timelimit,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketsum != null">
        TicketSum = #{ticketsum,jdbcType=INTEGER},
      </if>
      <if test="cargosum != null">
        CargoSum = #{cargosum,jdbcType=INTEGER},
      </if>
      <if test="weightsum != null">
        WeightSum = #{weightsum,jdbcType=DECIMAL},
      </if>
      <if test="volumesum != null">
        VolumeSum = #{volumesum,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        State = #{state,jdbcType=BIT},
      </if>
      <if test="ask != null">
        Ask = #{ask,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sor.entity.SorPackage">
    update sor_package
    set PackagePerson = #{packageperson,jdbcType=INTEGER},
      SealInt = #{sealint,jdbcType=VARCHAR},
      Destination = #{destination,jdbcType=VARCHAR},
      ReckonDes = #{reckondes,jdbcType=VARCHAR},
      TimeLimit = #{timelimit,jdbcType=TIMESTAMP},
      TicketSum = #{ticketsum,jdbcType=INTEGER},
      CargoSum = #{cargosum,jdbcType=INTEGER},
      WeightSum = #{weightsum,jdbcType=DECIMAL},
      VolumeSum = #{volumesum,jdbcType=DECIMAL},
      State = #{state,jdbcType=BIT},
      Ask = #{ask,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>