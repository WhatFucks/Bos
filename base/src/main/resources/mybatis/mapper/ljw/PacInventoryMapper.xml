<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljw.mapper.PacInventoryMapper">
  <resultMap id="BaseResultMap" type="com.ljw.entity.PacInventory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goodsNumber" jdbcType="VARCHAR" property="goodsnumber" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="stockNum" jdbcType="INTEGER" property="stocknum" />
    <result column="PlannedPrice" jdbcType="REAL" property="plannedprice" />
    <result column="Specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="measure" jdbcType="VARCHAR" property="measure" />
    <result column="money" jdbcType="REAL" property="money" />
    <result column="affiliatedUnit" jdbcType="VARCHAR" property="affiliatedunit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goodsNumber, goodsName, stockNum, PlannedPrice, Specifications, type, measure, 
    money, affiliatedUnit
  </sql>
  <select id="selectByExample" parameterType="com.ljw.entity.PacInventoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pac_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pac_inventory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pac_inventory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ljw.entity.PacInventoryExample">
    delete from pac_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ljw.entity.PacInventory">
    insert into pac_inventory (id, goodsNumber, goodsName, 
      stockNum, PlannedPrice, Specifications, 
      type, measure, money, 
      affiliatedUnit)
    values (#{id,jdbcType=INTEGER}, #{goodsnumber,jdbcType=VARCHAR}, #{goodsname,jdbcType=VARCHAR}, 
      #{stocknum,jdbcType=INTEGER}, #{plannedprice,jdbcType=REAL}, #{specifications,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{measure,jdbcType=VARCHAR}, #{money,jdbcType=REAL}, 
      #{affiliatedunit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ljw.entity.PacInventory">
    insert into pac_inventory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsnumber != null">
        goodsNumber,
      </if>
      <if test="goodsname != null">
        goodsName,
      </if>
      <if test="stocknum != null">
        stockNum,
      </if>
      <if test="plannedprice != null">
        PlannedPrice,
      </if>
      <if test="specifications != null">
        Specifications,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="measure != null">
        measure,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="affiliatedunit != null">
        affiliatedUnit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsnumber != null">
        #{goodsnumber,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="stocknum != null">
        #{stocknum,jdbcType=INTEGER},
      </if>
      <if test="plannedprice != null">
        #{plannedprice,jdbcType=REAL},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="measure != null">
        #{measure,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=REAL},
      </if>
      <if test="affiliatedunit != null">
        #{affiliatedunit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ljw.entity.PacInventoryExample" resultType="java.lang.Long">
    select count(*) from pac_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pac_inventory
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsnumber != null">
        goodsNumber = #{record.goodsnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsname != null">
        goodsName = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.stocknum != null">
        stockNum = #{record.stocknum,jdbcType=INTEGER},
      </if>
      <if test="record.plannedprice != null">
        PlannedPrice = #{record.plannedprice,jdbcType=REAL},
      </if>
      <if test="record.specifications != null">
        Specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.measure != null">
        measure = #{record.measure,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=REAL},
      </if>
      <if test="record.affiliatedunit != null">
        affiliatedUnit = #{record.affiliatedunit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pac_inventory
    set id = #{record.id,jdbcType=INTEGER},
      goodsNumber = #{record.goodsnumber,jdbcType=VARCHAR},
      goodsName = #{record.goodsname,jdbcType=VARCHAR},
      stockNum = #{record.stocknum,jdbcType=INTEGER},
      PlannedPrice = #{record.plannedprice,jdbcType=REAL},
      Specifications = #{record.specifications,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      measure = #{record.measure,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=REAL},
      affiliatedUnit = #{record.affiliatedunit,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ljw.entity.PacInventory">
    update pac_inventory
    <set>
      <if test="goodsnumber != null">
        goodsNumber = #{goodsnumber,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="stocknum != null">
        stockNum = #{stocknum,jdbcType=INTEGER},
      </if>
      <if test="plannedprice != null">
        PlannedPrice = #{plannedprice,jdbcType=REAL},
      </if>
      <if test="specifications != null">
        Specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="measure != null">
        measure = #{measure,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=REAL},
      </if>
      <if test="affiliatedunit != null">
        affiliatedUnit = #{affiliatedunit,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ljw.entity.PacInventory">
    update pac_inventory
    set goodsNumber = #{goodsnumber,jdbcType=VARCHAR},
      goodsName = #{goodsname,jdbcType=VARCHAR},
      stockNum = #{stocknum,jdbcType=INTEGER},
      PlannedPrice = #{plannedprice,jdbcType=REAL},
      Specifications = #{specifications,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      measure = #{measure,jdbcType=VARCHAR},
      money = #{money,jdbcType=REAL},
      affiliatedUnit = #{affiliatedunit,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>