<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljw.mapper.LjwPacStockMapper">
  <resultMap id="BaseResultMap" type="com.ljw.entity.PacStock">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="WarehouseNo" jdbcType="VARCHAR" property="warehouseno" />
    <result column="ReservoirType" jdbcType="BIT" property="reservoirtype" />
    <result column="Transport" jdbcType="VARCHAR" property="transport" />
    <result column="SubordinateUnit" jdbcType="VARCHAR" property="subordinateunit" />
    <result column="DrawerNo" jdbcType="INTEGER" property="drawerno" />
    <result column="DrawerName" jdbcType="VARCHAR" property="drawername" />
    <result column="DrawerTime" jdbcType="TIMESTAMP" property="drawertime" />
    <result column="Remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, WarehouseNo, ReservoirType, Transport, SubordinateUnit, DrawerNo, DrawerName,
    DrawerTime, Remark, status
  </sql>
  <!-- 入库与库存两表联查
  <resultMap id="StockAndStockItem" type="pacStock">
    <id column="kid"  property="id" />
    <result column="kWarehouseNo" property="warehouseno" />
    <result column="ReservoirType" property="reservoirtype" />
    <result column="Transport" property="transport" />
    <result column="SubordinateUnit" property="subordinateunit" />
    <result column="DrawerNo" property="drawerno" />
    <result column="DrawerName" property="drawername" />
    <result column="DrawerTime" property="drawertime" />
    <result column="Remark" property="remark" />
    <result column="kstatus" property="status" />
    <collection property="stockitems" ofType="com.ljw.entity.PacStockitem">
      <id column="mid" property="id" />
      <result column="mWarehouseNo" property="warehouseno" />
      <result column="GoodsCode" property="goodscode" />
      <result column="GoodsName" property="goodsname" />
      <result column="StorageNum" property="storagenum" />
      <result column="ActualNum" property="actualnum" />
      <result column="PlannedPrice" property="plannedprice" />
      <result column="Specifications" property="specifications" />
      <result column="type" property="type" />
      <result column="mstatus" property="status" />
    </collection>
  </resultMap>
  <select id="selectByStockAndStockItem" parameterType="string" resultMap="StockAndStockItem" >
select pk.id kid,pk.WarehouseNo kWarehouseNo,pk.ReservoirType,pk.Transport,pk.SubordinateUnit,
pk.DrawerNo,pk.DrawerName,pk.DrawerTime,pk.Remark,pk.status kstatus,pm.id mid,pm.WarehouseNo mWarehouseNo,
pm.GoodsCode,pm.GoodsName,pm.ActualNum,pm.StorageNum,pm.PlannedPrice,pm.Specifications,pm.type,pm.Status mstatus from pac_stock pk
INNER JOIN pac_stockitem pm on pk.id=pm.id where pk.status=0 and pm.Status=1 and pk.WarehouseNo like #{value}
  </select>-->
  <select id="selectByExample" parameterType="com.ljw.entity.PacStockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pac_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pac_stock
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pac_stock
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ljw.entity.PacStockExample">
    delete from pac_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ljw.entity.PacStock">
    insert into pac_stock (id, WarehouseNo, ReservoirType,
      Transport, SubordinateUnit, DrawerNo,
      DrawerName, DrawerTime, Remark,
      status)
    values (#{id,jdbcType=INTEGER}, #{warehouseno,jdbcType=VARCHAR}, #{reservoirtype,jdbcType=BIT},
      #{transport,jdbcType=VARCHAR}, #{subordinateunit,jdbcType=VARCHAR}, #{drawerno,jdbcType=INTEGER},
      #{drawername,jdbcType=VARCHAR}, #{drawertime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ljw.entity.PacStock">
    insert into pac_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="warehouseno != null">
        WarehouseNo,
      </if>
      <if test="reservoirtype != null">
        ReservoirType,
      </if>
      <if test="transport != null">
        Transport,
      </if>
      <if test="subordinateunit != null">
        SubordinateUnit,
      </if>
      <if test="drawerno != null">
        DrawerNo,
      </if>
      <if test="drawername != null">
        DrawerName,
      </if>
      <if test="drawertime != null">
        DrawerTime,
      </if>
      <if test="remark != null">
        Remark,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="warehouseno != null">
        #{warehouseno,jdbcType=VARCHAR},
      </if>
      <if test="reservoirtype != null">
        #{reservoirtype,jdbcType=BIT},
      </if>
      <if test="transport != null">
        #{transport,jdbcType=VARCHAR},
      </if>
      <if test="subordinateunit != null">
        #{subordinateunit,jdbcType=VARCHAR},
      </if>
      <if test="drawerno != null">
        #{drawerno,jdbcType=INTEGER},
      </if>
      <if test="drawername != null">
        #{drawername,jdbcType=VARCHAR},
      </if>
      <if test="drawertime != null">
        #{drawertime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ljw.entity.PacStockExample" resultType="java.lang.Long">
    select count(*) from pac_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pac_stock
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.warehouseno != null">
        WarehouseNo = #{record.warehouseno,jdbcType=VARCHAR},
      </if>
      <if test="record.reservoirtype != null">
        ReservoirType = #{record.reservoirtype,jdbcType=BIT},
      </if>
      <if test="record.transport != null">
        Transport = #{record.transport,jdbcType=VARCHAR},
      </if>
      <if test="record.subordinateunit != null">
        SubordinateUnit = #{record.subordinateunit,jdbcType=VARCHAR},
      </if>
      <if test="record.drawerno != null">
        DrawerNo = #{record.drawerno,jdbcType=INTEGER},
      </if>
      <if test="record.drawername != null">
        DrawerName = #{record.drawername,jdbcType=VARCHAR},
      </if>
      <if test="record.drawertime != null">
        DrawerTime = #{record.drawertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        Remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pac_stock
    set id = #{record.id,jdbcType=INTEGER},
      WarehouseNo = #{record.warehouseno,jdbcType=VARCHAR},
      ReservoirType = #{record.reservoirtype,jdbcType=BIT},
      Transport = #{record.transport,jdbcType=VARCHAR},
      SubordinateUnit = #{record.subordinateunit,jdbcType=VARCHAR},
      DrawerNo = #{record.drawerno,jdbcType=INTEGER},
      DrawerName = #{record.drawername,jdbcType=VARCHAR},
      DrawerTime = #{record.drawertime,jdbcType=TIMESTAMP},
      Remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ljw.entity.PacStock">
    update pac_stock
    <set>
      <if test="warehouseno != null">
        WarehouseNo = #{warehouseno,jdbcType=VARCHAR},
      </if>
      <if test="reservoirtype != null">
        ReservoirType = #{reservoirtype,jdbcType=BIT},
      </if>
      <if test="transport != null">
        Transport = #{transport,jdbcType=VARCHAR},
      </if>
      <if test="subordinateunit != null">
        SubordinateUnit = #{subordinateunit,jdbcType=VARCHAR},
      </if>
      <if test="drawerno != null">
        DrawerNo = #{drawerno,jdbcType=INTEGER},
      </if>
      <if test="drawername != null">
        DrawerName = #{drawername,jdbcType=VARCHAR},
      </if>
      <if test="drawertime != null">
        DrawerTime = #{drawertime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        Remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ljw.entity.PacStock">
    update pac_stock
    set WarehouseNo = #{warehouseno,jdbcType=VARCHAR},
      ReservoirType = #{reservoirtype,jdbcType=BIT},
      Transport = #{transport,jdbcType=VARCHAR},
      SubordinateUnit = #{subordinateunit,jdbcType=VARCHAR},
      DrawerNo = #{drawerno,jdbcType=INTEGER},
      DrawerName = #{drawername,jdbcType=VARCHAR},
      DrawerTime = #{drawertime,jdbcType=TIMESTAMP},
      Remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
